{"version":3,"sources":["./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/approval-card/approval-card.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-home/certification-home.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-requests/certification-requests.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/confirm-dialog/confirm-dialog.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/my-requests/my-requests.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/past-certifications/past-certifications.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-filter-dialog/request-filter-dialog.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-item-type/request-item-type.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-action-confirm-dialog/user-action-confirm-dialog.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-request-card/user-request-card.component.html","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/certification-dashboard-routing.module.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/certification-dashboard.module.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/approval-card/approval-card.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/approval-card/approval-card.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-home/certification-home.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-home/certification-home.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-requests/certification-requests.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/certification-requests/certification-requests.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/confirm-dialog/confirm-dialog.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/confirm-dialog/confirm-dialog.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/my-requests/my-requests.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/my-requests/my-requests.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/past-certifications/past-certifications.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/past-certifications/past-certifications.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-filter-dialog/request-filter-dialog.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-filter-dialog/request-filter-dialog.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-item-type/request-item-type.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/request-item-type/request-item-type.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-action-confirm-dialog/user-action-confirm-dialog.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-action-confirm-dialog/user-action-confirm-dialog.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-request-card/user-request-card.component.scss","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/components/user-request-card/user-request-card.component.ts","./project/ws/app/src/lib/routes/infy/routes/certification-dashboard/services/certification-dashboard.service.ts"],"names":[],"mappings":"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","file":"routes-certification-dashboard-certification-dashboard-module-es2015.js","sourcesContent":["export default \"<mat-card>\\n  <section class=\\\"flex flex-column flex-between\\\">\\n    <section class=\\\"margin-bottom-m\\\">\\n      <div class=\\\"mat-caption text-truncate\\\">\\n        <ws-app-request-item-type [itemType]=\\\"approvalItem?.record_type\\\"></ws-app-request-item-type>\\n      </div>\\n      <h2 class=\\\"mat-title margin-remove-bottom width-1-1 text-truncate\\\">\\n        {{ approvalItem?.certification_name }}\\n      </h2>\\n      <div class=\\\"mat-caption text-truncate\\\">\\n        <ng-container i18n>\\n          Raised by\\n        </ng-container>\\n        <ng-container>\\n          {{ approvalItem?.user?.name }}\\n        </ng-container>\\n      </div>\\n    </section>\\n\\n    <section>\\n      <div class=\\\"hidden sm:block\\\" [ngSwitch]=\\\"approvalItem?.record_type\\\">\\n        <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>LOCATION</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ approvalItem?.location }}, {{ approvalItem?.country }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>DATE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ approvalItem?.date | pipeDateConcat }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>TIME</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ approvalItem?.slot }}</div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div>\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>AMOUNT</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ approvalItem?.currency }} {{ approvalItem?.amount }}\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>EXAM DATE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ approvalItem?.exam_date | pipeDateConcat }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\" *ngIf=\\\"approvalItem?.resultType\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT TYPE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                <ng-container [ngTemplateOutlet]=\\\"resultType\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: approvalItem?.resultType }\\\"></ng-container>\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ approvalItem?.result }}</div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <div class=\\\"sm:hidden\\\" [ngSwitch]=\\\"approvalItem?.record_type\\\">\\n        <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">location_on</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              {{ approvalItem?.location }}, {{ approvalItem?.country }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">calendar_today</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              {{ approvalItem?.date | pipeDateConcat }}, {{ approvalItem?.slot }}\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">money</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Amount: </span>\\n              <span class=\\\"mat-body\\\">\\n                {{ approvalItem?.currency }} {{ approvalItem?.amount }}\\n              </span>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">calendar_today</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Exam Date: </span>\\n              <span class=\\\"mat-body\\\">{{ approvalItem?.exam_date | pipeDateConcat }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">assignment</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Result Type: </span>\\n              <span class=\\\"mat-body\\\">{{ approvalItem?.resultType }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">assignment_turned_in</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Result: </span>\\n              <span class=\\\"mat-body\\\">{{ approvalItem?.result }}</span>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <div class=\\\"mat-caption margin-bottom-m margin-top-m\\\" [ngSwitch]=\\\"approvalItem?.record_type\\\">\\n        <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n          <span i18n>\\n            If accepted, you will have to proctor\\n          </span>\\n          {{ approvalItem?.user?.name }}\\n          <span i18n>\\n            during the certification exam.\\n          </span>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n          <span i18n>\\n            If accepted,\\n          </span>\\n          {{ approvalItem?.user?.name }}\\n          <span i18n>\\n            will be reimbursed for an amount of\\n          </span>\\n          {{ approvalItem?.currency }} {{ approvalItem?.amount }}.\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n          <span i18n>\\n            By accepting, you acknowledge that\\n          </span>\\n          {{ approvalItem?.user?.name }}\\n          <span i18n>\\n            has provided genuine proof of the certification as well as the correct details.\\n          </span>\\n        </ng-container>\\n      </div>\\n    </section>\\n\\n    <section>\\n      <button mat-flat-button class=\\\"margin-right-s\\\" [color]=\\\"'primary'\\\" i18n (click)=\\\"confirmAction('accept')\\\"\\n        [disabled]=\\\"sendStatus === 'sending'\\\">\\n        Accept\\n      </button>\\n      <button mat-stroked-button class=\\\"margin-right-s\\\" [color]=\\\"'primary'\\\" i18n (click)=\\\"confirmAction('decline')\\\"\\n        [disabled]=\\\"sendStatus === 'sending'\\\">\\n        Decline\\n      </button>\\n      <button mat-stroked-button [color]=\\\"'primary'\\\" *ngIf=\\\"approvalItem?.record_type === 'result_verification'\\\"\\n        (click)=\\\"downloadProof()\\\" [disabled]=\\\"downloadStatus === 'fetching'\\\">\\n        <ng-container *ngIf=\\\"downloadStatus !== 'fetching'\\\" i18n>Download</ng-container>\\n        <ng-container *ngIf=\\\"downloadStatus === 'fetching'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div i18n>Downloading...</div>\\n            <div class=\\\"flex flex-column flex-center\\\">\\n              <mat-progress-spinner [color]=\\\"'primary'\\\" [diameter]=\\\"16\\\" [mode]=\\\"'indeterminate'\\\"></mat-progress-spinner>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </button>\\n    </section>\\n  </section>\\n</mat-card>\\n\\n<!-- Templates -->\\n<!-- Result type for result verification -->\\n<ng-template #resultType let-type>\\n  <ng-container [ngSwitch]=\\\"type\\\">\\n    <ng-container *ngSwitchCase=\\\"'score'\\\" i18n>Score</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'percentage'\\\" i18n>Percentage</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'grade'\\\" i18n>Grade</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'other'\\\" i18n>Other</ng-container>\\n    <ng-container *ngSwitchDefault>{{ type }}</ng-container>\\n  </ng-container>\\n</ng-template>\"","export default \"<mat-toolbar [color]=\\\"pageNavbar.color\\\" [ngStyle]=\\\"pageNavbar?.styles\\\">\\n  <ws-widget-btn-page-back [widgetData]=\\\"{ url: 'back' }\\\"></ws-widget-btn-page-back>\\n  <span class=\\\"ml-2 text-truncate\\\" i18n>\\n    Notifications\\n  </span>\\n</mat-toolbar>\\n\\n<mat-tab-group mat-align-tabs=\\\"center\\\" [dynamicHeight]=\\\"true\\\">\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <span i18n>My Certifications</span>\\n    </ng-template>\\n\\n    <ws-app-past-certifications></ws-app-past-certifications>\\n  </mat-tab>\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <span i18n>My Approvals</span>\\n    </ng-template>\\n\\n    <ws-app-certification-requests [pageType]=\\\"'approver'\\\"></ws-app-certification-requests>\\n  </mat-tab>\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <span i18n>My Requests</span>\\n    </ng-template>\\n\\n    <ws-app-certification-requests [pageType]=\\\"'user'\\\"></ws-app-certification-requests>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","export default \"<section class=\\\"my-4 px-4 container-balanced\\\">\\n  <div class=\\\"flex flex-between\\\">\\n    <button\\n      mat-mini-fab\\n      [color]=\\\"'primary'\\\"\\n      (click)=\\\"openFilterDialog()\\\"\\n      matTooltip=\\\"Filter\\\"\\n      i18n-matTooltip\\n    >\\n      <mat-icon>filter_list</mat-icon>\\n    </button>\\n  </div>\\n\\n  <section class=\\\"margin-top-l\\\">\\n    <ng-container [ngSwitch]=\\\"itemFetchStatus\\\">\\n      <ng-container *ngSwitchCase=\\\"'done'\\\">\\n        <ng-container *ngIf=\\\"approvalItems.length\\\" [ngSwitch]=\\\"pageType\\\">\\n          <ng-container *ngSwitchCase=\\\"'approver'\\\">\\n            <section class=\\\"margin-bottom-s\\\" *ngFor=\\\"let approvalItem of approvalItems\\\">\\n              <ws-app-approval-card\\n                [approvalItem]=\\\"approvalItem\\\"\\n                [itemSubject]=\\\"itemSubject\\\"\\n              ></ws-app-approval-card>\\n            </section>\\n          </ng-container>\\n\\n          <ng-container *ngSwitchCase=\\\"'user'\\\">\\n            <section class=\\\"margin-bottom-s\\\" *ngFor=\\\"let requestItem of approvalItems\\\">\\n              <ws-app-user-request-card\\n                [requestItem]=\\\"requestItem\\\"\\n                [itemSubject]=\\\"itemSubject\\\"\\n              ></ws-app-user-request-card>\\n            </section>\\n          </ng-container>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!approvalItems.length\\\">\\n          <section class=\\\"text-center mat-body margin-top-xl\\\" i18n>\\n            You have no request items.\\n          </section>\\n        </ng-container>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"'error'\\\">\\n        <section class=\\\"text-center mat-body margin-top-xl\\\" i18n>\\n          An error occured while fetching request items.\\n        </section>\\n      </ng-container>\\n\\n      <!-- <ng-container *ngSwitchCase=\\\"'fetching'\\\">\\n        <section class=\\\"flex flex-center\\\">\\n          <app-spinner [spinColor]=\\\"'primary'\\\"></app-spinner>\\n        </section>\\n      </ng-container> -->\\n    </ng-container>\\n  </section>\\n</section>\\n\"","export default \"<section mat-dialog-title>\\n  <div class=\\\"mat-caption\\\">\\n    <ws-app-request-item-type [itemType]=\\\"data.approvalItem.record_type\\\"></ws-app-request-item-type>\\n  </div>\\n  <h3 class=\\\"mat-h3 text-truncate\\\">{{ data.approvalItem.certification_name }}</h3>\\n</section>\\n\\n<section mat-dialog-content>\\n  <ng-container [ngSwitch]=\\\"data.approvalItem.record_type\\\">\\n    <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n      <ng-container [ngSwitch]=\\\"data.actionType\\\">\\n        <p class=\\\"mat-body\\\" *ngSwitchCase=\\\"'accept'\\\">\\n          <ng-container i18n>\\n            Are you sure you wish to proctor\\n          </ng-container>\\n          <ng-container>\\n            {{ data.approvalItem.user?.name }}\\n          </ng-container>\\n          <ng-container i18n>?</ng-container>\\n        </p>\\n        <p class=\\\"mat-body\\\" i18n *ngSwitchCase=\\\"'decline'\\\">\\n          Are you sure you wish to decline this proctoring request?\\n        </p>\\n      </ng-container>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n      <ng-container [ngSwitch]=\\\"data.actionType\\\">\\n        <p class=\\\"mat-body\\\" i18n *ngSwitchCase=\\\"'accept'\\\">\\n          Are you sure you wish to approve this reimbursement request?\\n        </p>\\n        <p class=\\\"mat-body\\\" i18n *ngSwitchCase=\\\"'decline'\\\">\\n          Are you sure you wish to decline this reimbursement request?\\n        </p>\\n      </ng-container>\\n      <p class=\\\"mat-body\\\">\\n        <ng-container i18n>\\n          Amount:\\n        </ng-container>\\n        <ng-container>\\n          {{ data.approvalItem.currency }} {{ data.approvalItem.amount }}\\n        </ng-container>\\n      </p>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n      <ng-container [ngSwitch]=\\\"data.actionType\\\">\\n        <p class=\\\"mat-body\\\" i18n *ngSwitchCase=\\\"'accept'\\\">\\n          Are you sure you wish to accept this document proof?\\n        </p>\\n        <p class=\\\"mat-body\\\" i18n *ngSwitchCase=\\\"'decline'\\\">\\n          Are you sure you wish to decline this document proof?\\n        </p>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n  <section class=\\\"margin-top-xs\\\" *ngIf=\\\"\\n      (data.approvalItem.record_type === 'budget_approval' && data.actionType === 'decline') ||\\n      data.approvalItem.record_type === 'result_verification'\\n    \\\">\\n    <mat-form-field class=\\\"width-1-1\\\">\\n      <input matInput type=\\\"text\\\" [formControl]=\\\"reasonCtrl\\\" placeholder=\\\"Please provide a reason\\\" i18n-placeholder />\\n      <mat-hint *ngIf=\\\"data.approvalItem.record_type === 'result_verification' && !reasonCtrl.value\\\" i18n>\\n        The reason must be within 500 characters.\\n      </mat-hint>\\n      <mat-hint *ngIf=\\\"data.approvalItem.record_type === 'budget_approval' && !reasonCtrl.value\\\" i18n>\\n        The reason must be within 1000 characters.\\n      </mat-hint>\\n    </mat-form-field>\\n  </section>\\n</section>\\n\\n<section mat-dialog-actions>\\n  <button mat-flat-button [color]=\\\"'primary'\\\" class=\\\"margin-right-xs\\\" (click)=\\\"sendAction()\\\">\\n    <ng-container [ngSwitch]=\\\"data.actionType\\\">\\n      <ng-container *ngSwitchCase=\\\"'accept'\\\" i18n>ACCEPT</ng-container>\\n      <ng-container *ngSwitchCase=\\\"'decline'\\\" i18n>DECLINE</ng-container>\\n    </ng-container>\\n  </button>\\n  <button mat-stroked-button mat-dialog-close [color]=\\\"'primary'\\\" i18n>CANCEL</button>\\n</section>\"","export default \"<p>my-requests works!</p>\\n\"","export default \"<section class=\\\"my-4 px-4 container-balanced\\\">\\n  <div>\\n    <mat-form-field>\\n      <mat-select [formControl]=\\\"statusControl\\\" placeholder=\\\"Completion Status\\\" i18n-placeholder>\\n        <mat-option [value]=\\\"'completed'\\\" i18n>Completed</mat-option>\\n        <mat-option [value]=\\\"'notcompleted'\\\" i18n>Not Completed</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n  <section class=\\\"margin-top-l\\\">\\n    <ng-container [ngSwitch]=\\\"certificationsFetchStatus\\\">\\n      <ng-container *ngSwitchCase=\\\"'done'\\\">\\n        <ng-container *ngIf=\\\"pastCertifications.length\\\">\\n          <ng-container\\n            *ngFor=\\\"let pastCertification of pastCertifications\\\"\\n            [ngTemplateOutlet]=\\\"pastCertificationCard\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: pastCertification }\\\"\\n          ></ng-container>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!pastCertifications.length\\\">\\n          <section class=\\\"text-center mat-body margin-top-xl\\\" i18n>\\n            There are no certifications that you have given in the past.\\n          </section>\\n        </ng-container>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"'error'\\\">\\n        <section class=\\\"text-center mat-body margin-top-xl\\\" i18n>\\n          An error occured while fetching past certifications.\\n        </section>\\n      </ng-container>\\n\\n      <!-- <ng-container *ngSwitchCase=\\\"'fetching'\\\">\\n        <section class=\\\"flex flex-center\\\">\\n          <app-spinner [spinColor]=\\\"'primary'\\\"></app-spinner>\\n        </section>\\n      </ng-container> -->\\n    </ng-container>\\n  </section>\\n</section>\\n\\n<!-- Certifiation card -->\\n<ng-template #pastCertificationCard let-pastCertification>\\n  <section class=\\\"margin-top-s margin-bottom-s\\\">\\n    <mat-card>\\n      <section class=\\\"flex flex-column flex-between\\\">\\n        <section class=\\\"margin-bottom-m\\\">\\n          <div class=\\\"mat-caption text-truncate uppercase\\\">\\n            <ng-container\\n              [ngTemplateOutlet]=\\\"certificationType\\\"\\n              [ngTemplateOutletContext]=\\\"{ $implicit: pastCertification.certification_type }\\\"\\n            ></ng-container>\\n          </div>\\n          <h2 class=\\\"mat-title margin-remove-bottom width-1-1 text-truncate\\\">\\n            {{ pastCertification.certification_name }}\\n          </h2>\\n        </section>\\n\\n        <div class=\\\"hidden sm:block\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>EXAM DATE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ pastCertification.examDate | pipeDateConcat }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\" *ngIf=\\\"pastCertification.result_type\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT TYPE</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ pastCertification.result_type }}</div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ pastCertification.result }}</div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"sm:hidden\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">calendar_today</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              <span class=\\\"mat-body-2 margin-right-xs\\\" i18n>Exam Date</span>\\n              <span class=\\\"mat-body\\\">{{ pastCertification.examDate | pipeDateConcat }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">score</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              <span class=\\\"mat-body-2 margin-right-xs\\\" i18n>Result</span>\\n              <span class=\\\"mat-body\\\"\\n                >{{ pastCertification.result_type }} {{ pastCertification.result }}</span\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </section>\\n    </mat-card>\\n  </section>\\n</ng-template>\\n\\n<!-- Templates -->\\n<ng-template #certificationType let-certificationType>\\n  <ng-container [ngSwitch]=\\\"certificationType\\\">\\n    <ng-container *ngSwitchCase=\\\"'Internal'\\\" i18n>Internal Certification</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'External'\\\" i18n>External Certification</ng-container>\\n  </ng-container>\\n</ng-template>\\n\"","export default \"<section>\\n  <h2 class=\\\"mat-title\\\" i18n>Filter</h2>\\n\\n  <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"applyFilters()\\\">\\n    <div>\\n      <mat-form-field class=\\\"width-1-1\\\">\\n        <mat-select placeholder=\\\"Type\\\" i18n-placeholder formControlName=\\\"type\\\">\\n          <mat-option value=\\\"all\\\">All</mat-option>\\n          <mat-option value=\\\"proctor_approval\\\" i18n>Proctor Approval</mat-option>\\n          <mat-option value=\\\"budget_approval\\\" i18n>Budget Approval</mat-option>\\n          <mat-option value=\\\"result_verification\\\" i18n>Result Verification</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <mat-form-field class=\\\"width-1-1\\\" *ngIf=\\\"pageType === 'user'\\\">\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"startDatePicker\\\"\\n          [max]=\\\"defaultEndDate\\\"\\n          placeholder=\\\"Start date\\\"\\n          i18n-placeholder\\n          formControlName=\\\"startDate\\\"\\n        />\\n        <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #startDatePicker></mat-datepicker>\\n        <mat-error i18n>\\n          The start date must be before the end date.\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <mat-form-field class=\\\"width-1-1\\\" *ngIf=\\\"pageType === 'user'\\\">\\n        <input\\n          matInput\\n          [matDatepicker]=\\\"endDatePicker\\\"\\n          [max]=\\\"defaultEndDate\\\"\\n          placeholder=\\\"End date\\\"\\n          i18n-placeholder\\n          formControlName=\\\"endDate\\\"\\n        />\\n        <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #endDatePicker></mat-datepicker>\\n        <mat-error i18n>\\n          The start date must be before the end date.\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"margin-top-m flex\\\">\\n      <div class=\\\"mr-2\\\">\\n        <button\\n          mat-flat-button\\n          [color]=\\\"'primary'\\\"\\n          type=\\\"submit\\\"\\n          i18n\\n          [disabled]=\\\"filterForm.invalid\\\"\\n        >\\n          Apply\\n        </button>\\n      </div>\\n      <div>\\n        <button mat-stroked-button [color]=\\\"'primary'\\\" mat-dialog-close type=\\\"submit\\\" i18n>\\n          Cancel\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</section>\\n\"","export default \"<ng-container [ngSwitch]=\\\"itemType\\\">\\n  <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\" i18n>PROCTOR APPROVAL</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'budget_approval'\\\" i18n>BUDGET APPROVAL</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'result_verification'\\\" i18n>VERIFICATION REQUEST</ng-container>\\n  <ng-container *ngSwitchDefault i18n>REQUEST</ng-container>\\n</ng-container>\\n\"","export default \"<section class=\\\"mb-4\\\">\\n  <div class=\\\"mat-caption\\\">\\n    <ws-app-request-item-type [itemType]=\\\"data.approvalItem.record_type\\\"></ws-app-request-item-type>\\n  </div>\\n  <h3 class=\\\"mat-h3 text-truncate\\\">{{ data.approvalItem.certification_name }}</h3>\\n</section>\\n\\n<section class=\\\"mb-4\\\">\\n  <ng-container [ngSwitch]=\\\"data.approvalItem.record_type\\\">\\n    <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n      <p class=\\\"mat-body\\\" i18n>\\n        Are you sure you wish to cancel this At-Desk booking?\\n      </p>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n      <p class=\\\"mat-body\\\" i18n>\\n        Are you sure you wish to cancel this budget approval request?\\n      </p>\\n      <p class=\\\"mat-body\\\">\\n        <ng-container i18n>\\n          Amount:\\n        </ng-container>\\n        {{ data.approvalItem.currency }} {{ data.approvalItem.amount }}\\n      </p>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n      <ng-container [ngSwitch]=\\\"data.actionType\\\">\\n        <p class=\\\"mat-body\\\" *ngSwitchCase=\\\"'accept'\\\">\\n          Are you sure you wish to accept {{ data.approvalItem.user.name }}'s document proof?\\n        </p>\\n        <p class=\\\"mat-body\\\" *ngSwitchCase=\\\"'decline'\\\">\\n          Are you sure you wish to decline {{ data.approvalItem.user.name }}'s document proof?\\n        </p>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n  <section>\\n    <button mat-flat-button [color]=\\\"'primary'\\\" class=\\\"margin-right-xs\\\" i18n (click)=\\\"onAction()\\\">\\n      Yes\\n    </button>\\n    <button mat-stroked-button mat-dialog-close [color]=\\\"'primary'\\\" i18n>No</button>\\n  </section>\\n</section>\\n\"","export default \"<mat-card>\\n  <section class=\\\"flex flex-column flex-between\\\">\\n    <section class=\\\"margin-bottom-m\\\">\\n      <div class=\\\"mat-caption text-truncate\\\">\\n        <ws-app-request-item-type [itemType]=\\\"requestItem.record_type\\\"></ws-app-request-item-type>\\n      </div>\\n      <h2 class=\\\"mat-title margin-remove-bottom width-1-1 text-truncate\\\">\\n        {{ requestItem.certification_name }}\\n      </h2>\\n      <div class=\\\"mat-caption text-truncate\\\" *ngIf=\\\"\\n          requestItem.status !== 'Approved' &&\\n          requestItem.status !== 'Rejected' &&\\n          requestItem.status !== 'Cancelled'\\n        \\\">\\n        <ng-container i18n>\\n          Request currently with\\n        </ng-container>\\n        <ng-container>\\n          {{ requestItem.currently_with.name }}\\n        </ng-container>\\n      </div>\\n      <div class=\\\"mat-caption text-truncate\\\">\\n        <ng-container i18n>\\n          Request raised on\\n        </ng-container>\\n        <ng-container>\\n          {{ requestItem.raised_on | pipeDateConcat }}\\n        </ng-container>\\n      </div>\\n    </section>\\n\\n    <section>\\n      <div class=\\\"hidden sm:block\\\" [ngSwitch]=\\\"requestItem.record_type\\\">\\n        <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>LOCATION</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ requestItem.location }}, {{ requestItem.country }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>EXAM DATE</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ requestItem.date | pipeDateConcat }}</div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>TIME</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ requestItem.slot }}</div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div>\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>AMOUNT</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ requestItem.currency }} {{ requestItem.amount }}\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>EXAM DATE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                {{ requestItem.exam_date | pipeDateConcat }}\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\" *ngIf=\\\"requestItem.resultType\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT TYPE</div>\\n              <div class=\\\"mat-body text-truncate\\\">\\n                <ng-container [ngTemplateOutlet]=\\\"resultType\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: requestItem.resultType }\\\"></ng-container>\\n              </div>\\n            </div>\\n            <div class=\\\"width-1-3\\\">\\n              <div class=\\\"mat-body-2 text-truncate\\\" i18n>RESULT</div>\\n              <div class=\\\"mat-body text-truncate\\\">{{ requestItem.result }}</div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <div class=\\\"sm:hidden\\\" [ngSwitch]=\\\"requestItem.record_type\\\">\\n        <ng-container *ngSwitchCase=\\\"'proctor_approval'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">location_on</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              {{ requestItem.location }}, {{ requestItem.country }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">calendar_today</mat-icon>\\n            <div class=\\\"margin-left-xs mat-body\\\">\\n              {{ requestItem.date | pipeDateConcat }}, {{ requestItem.slot }}\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'budget_approval'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">money</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Amount: </span>\\n              <span class=\\\"mat-body\\\">\\n                {{ requestItem.currency }} {{ requestItem.amount }}\\n              </span>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'result_verification'\\\">\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">calendar_today</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Exam Date: </span>\\n              <span class=\\\"mat-body\\\">{{ requestItem.exam_date | pipeDateConcat }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\" *ngIf=\\\"requestItem.resultType\\\">\\n            <mat-icon [inline]=\\\"true\\\">assignment</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Result Type: </span>\\n              <span class=\\\"mat-body\\\">{{ requestItem.resultType }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"margin-bottom-xs margin-top-xs flex\\\">\\n            <mat-icon [inline]=\\\"true\\\">assignment_turned_in</mat-icon>\\n            <div class=\\\"margin-left-xs\\\">\\n              <span class=\\\"mat-body-2\\\" i18n>Result: </span>\\n              <span class=\\\"mat-body\\\">{{ requestItem.result }}</span>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </section>\\n\\n    <section class=\\\"margin-top-xs margin-bottom-xs\\\">\\n      <span class=\\\"mat-body-2 margin-right-xs\\\" i18n>Status: </span>\\n      <span class=\\\"mat-body\\\" [ngSwitch]=\\\"requestItem.status\\\">\\n        <ng-container *ngSwitchCase=\\\"'Submitted'\\\" i18n>Submitted</ng-container>\\n        <ng-container *ngSwitchCase=\\\"'Approved'\\\" i18n>Approved</ng-container>\\n        <ng-container *ngSwitchCase=\\\"'Recalled'\\\" i18n>Recalled</ng-container>\\n        <ng-container *ngSwitchCase=\\\"'Cancelled'\\\" i18n>Cancelled</ng-container>\\n        <ng-container *ngSwitchCase=\\\"'Uploaded'\\\" i18n>Uploaded</ng-container>\\n        <ng-container *ngSwitchCase=\\\"'Rejected'\\\" i18n>Rejected</ng-container>\\n      </span>\\n    </section>\\n\\n    <section class=\\\"margin-top-s\\\">\\n      <button mat-flat-button class=\\\"margin-right-s\\\" [color]=\\\"'primary'\\\" i18n (click)=\\\"confirmAction('cancel')\\\"\\n        [disabled]=\\\"sendStatus === 'sending'\\\" *ngIf=\\\"\\n          requestItem.status !== 'Approved' &&\\n          requestItem.status !== 'Rejected' &&\\n          requestItem.status !== 'Cancelled' &&\\n          (requestItem.record_type === 'budget_approval' ||\\n            requestItem.record_type === 'proctor_approval')\\n        \\\">\\n        Cancel\\n      </button>\\n      <button mat-stroked-button [color]=\\\"'primary'\\\" *ngIf=\\\"requestItem.record_type === 'result_verification'\\\"\\n        (click)=\\\"downloadProof()\\\" [disabled]=\\\"downloadStatus === 'fetching'\\\">\\n        <ng-container *ngIf=\\\"downloadStatus !== 'fetching'\\\" i18n>Download</ng-container>\\n        <ng-container *ngIf=\\\"downloadStatus === 'fetching'\\\">\\n          <div class=\\\"flex flex-between\\\">\\n            <div i18n>Downloading...</div>\\n            <div class=\\\"flex flex-column flex-center\\\">\\n              <mat-progress-spinner [color]=\\\"'primary'\\\" [diameter]=\\\"16\\\" [mode]=\\\"'indeterminate'\\\"></mat-progress-spinner>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </button>\\n    </section>\\n  </section>\\n</mat-card>\\n\\n<!-- Templates -->\\n<!-- Result type for result verification -->\\n<ng-template #resultType let-type>\\n  <ng-container [ngSwitch]=\\\"type\\\">\\n    <ng-container *ngSwitchCase=\\\"'score'\\\" i18n>Score</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'percentage'\\\" i18n>Percentage</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'grade'\\\" i18n>Grade</ng-container>\\n    <ng-container *ngSwitchCase=\\\"'other'\\\" i18n>Other</ng-container>\\n    <ng-container *ngSwitchDefault>{{ type }}</ng-container>\\n  </ng-container>\\n</ng-template>\"","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { CertificationHomeComponent } from './components/certification-home/certification-home.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: CertificationHomeComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CertificationDashboardRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\nimport {\n  MatTabsModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatCardModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatInputModule,\n  MatDatepickerModule,\n} from '@angular/material'\n\nimport { BtnPageBackModule } from '@ws-widget/collection'\nimport { PipeDateConcatModule } from '@ws-widget/utils'\n\nimport { CertificationDashboardRoutingModule } from './certification-dashboard-routing.module'\nimport { ApprovalCardComponent } from './components/approval-card/approval-card.component'\nimport { CertificationHomeComponent } from './components/certification-home/certification-home.component'\nimport { CertificationRequestsComponent } from './components/certification-requests/certification-requests.component'\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component'\nimport { MyRequestsComponent } from './components/my-requests/my-requests.component'\nimport { PastCertificationsComponent } from './components/past-certifications/past-certifications.component'\nimport { RequestFilterDialogComponent } from './components/request-filter-dialog/request-filter-dialog.component'\nimport { RequestItemTypeComponent } from './components/request-item-type/request-item-type.component'\nimport { UserActionConfirmDialogComponent } from './components/user-action-confirm-dialog/user-action-confirm-dialog.component'\nimport { UserRequestCardComponent } from './components/user-request-card/user-request-card.component'\nimport { CertificationApiService } from '../../../app-toc/routes/app-toc-certification/apis/certification-api.service'\nimport { CertificationDashboardService } from './services/certification-dashboard.service'\nimport { WINDOW_PROVIDERS } from '../../../app-toc/routes/app-toc-certification/services/window.service'\nimport { FileDownloadService } from '../../../app-toc/routes/app-toc-certification/services/file-download.service'\nimport { AppTocCertificationModule } from '../../../app-toc/routes/app-toc-certification/app-toc-certification.module'\n\n@NgModule({\n  declarations: [\n    ApprovalCardComponent,\n    CertificationHomeComponent,\n    CertificationRequestsComponent,\n    ConfirmDialogComponent,\n    MyRequestsComponent,\n    PastCertificationsComponent,\n    RequestFilterDialogComponent,\n    RequestItemTypeComponent,\n    UserActionConfirmDialogComponent,\n    UserRequestCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CertificationDashboardRoutingModule,\n    PipeDateConcatModule,\n    AppTocCertificationModule,\n    BtnPageBackModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n  ],\n  providers: [\n    CertificationApiService,\n    WINDOW_PROVIDERS,\n    FileDownloadService,\n    CertificationDashboardService,\n  ],\n  entryComponents: [\n    ConfirmDialogComponent,\n    RequestFilterDialogComponent,\n    UserActionConfirmDialogComponent,\n  ],\n})\nexport class CertificationDashboardModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL2FwcHJvdmFsLWNhcmQvYXBwcm92YWwtY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnDestroy } from '@angular/core'\nimport { MatDialog, MatSnackBar } from '@angular/material'\nimport { BehaviorSubject, Subscription, throwError, of } from 'rxjs'\nimport { switchMap, takeWhile, tap } from 'rxjs/operators'\n\nimport { TSendStatus, TFetchStatus } from '@ws-widget/utils'\n\nimport { FileDownloadService } from '../../../../../app-toc/routes/app-toc-certification/services/file-download.service'\nimport { CertificationApiService } from '../../../../../app-toc/routes/app-toc-certification/apis/certification-api.service'\nimport { CertificationDashboardService } from '../../services/certification-dashboard.service'\nimport {\n  ICertificationRequestItem,\n  TCertificationActionType,\n  ICertificationDialogData,\n  ICertificationDialogResult,\n} from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component'\nimport { SnackbarComponent } from '../../../../../app-toc/routes/app-toc-certification/components/snackbar/snackbar.component'\n\n@Component({\n  selector: 'ws-app-approval-card',\n  templateUrl: './approval-card.component.html',\n  styleUrls: ['./approval-card.component.scss'],\n})\nexport class ApprovalCardComponent implements OnDestroy {\n  @Input() approvalItem!: ICertificationRequestItem\n  @Input() itemSubject!: BehaviorSubject<boolean>\n  sendStatus: TSendStatus\n  downloadStatus: TFetchStatus\n  approverAction?: 'Approved' | 'Rejected'\n\n  downloadSub?: Subscription\n  dialogSub?: Subscription\n\n  constructor(\n    private dialog: MatDialog,\n    private snackbar: MatSnackBar,\n    private certificationDashboardSvc: CertificationDashboardService,\n    private certificationApi: CertificationApiService,\n    private fileDownloadSvc: FileDownloadService,\n  ) {\n    this.sendStatus = 'none'\n    this.downloadStatus = 'none'\n  }\n\n  ngOnDestroy() {\n    if (this.downloadSub && !this.downloadSub.closed) {\n      this.downloadSub.unsubscribe()\n    }\n\n    if (this.dialogSub && !this.dialogSub.closed) {\n      this.dialogSub.unsubscribe()\n    }\n  }\n\n  downloadProof() {\n    if (this.approvalItem.document && this.approvalItem.document.length) {\n      this.downloadStatus = 'fetching'\n\n      this.downloadSub = this.certificationApi\n        .getUploadedDocument(this.approvalItem.document[0].document_url)\n        .pipe(\n          switchMap((documentData: any) =>\n            this.fileDownloadSvc.saveFile(documentData.documentString, documentData.documentName),\n          ),\n        )\n        .subscribe(\n          () => {\n            this.downloadStatus = 'done'\n          },\n          () => {\n            this.downloadStatus = 'error'\n          },\n        )\n    } else {\n      this.snackbar.openFromComponent(SnackbarComponent, {\n        data: { code: 0, action: 'error' },\n      })\n    }\n  }\n\n  confirmAction(actionType: TCertificationActionType) {\n    const dialogData = {\n      actionType,\n      approvalItem: this.approvalItem,\n      action: this.approvalItem.record_type,\n    }\n\n    this.dialog\n      .open<ConfirmDialogComponent, ICertificationDialogData, ICertificationDialogResult>(\n        ConfirmDialogComponent,\n        { data: dialogData },\n      )\n      .afterClosed()\n      .pipe(\n        takeWhile(dialogResult => {\n          if (dialogResult && dialogResult.result) {\n            return true\n          }\n\n          return false\n        }),\n        tap(dialogResult => {\n          this.sendStatus = 'sending'\n          if (dialogResult && dialogResult.data) {\n            this.approverAction = dialogResult.data.status\n          }\n        }),\n        switchMap(dialogResult => {\n          if (dialogResult && dialogResult.data) {\n            return this.certificationDashboardSvc.performApproverAction(\n              dialogResult.action,\n              dialogResult.data,\n            )\n          }\n\n          return throwError(() => of('no data'))\n        }),\n        tap(\n          res => {\n            if (res && res.res_code === 1) {\n              this.snackbar.openFromComponent(SnackbarComponent, {\n                data: { action: this.approvalItem.record_type, code: this.approverAction },\n              })\n\n              return\n            }\n\n            this.snackbar.openFromComponent(SnackbarComponent)\n          },\n          () => {\n            this.snackbar.openFromComponent(SnackbarComponent)\n          },\n        ),\n      )\n      .subscribe(\n        res => {\n          if (res && res.res_code === 1) {\n            this.itemSubject.next(true)\n          }\n\n          this.sendStatus = 'done'\n        },\n        () => {\n          this.sendStatus = 'error'\n        },\n      )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL2NlcnRpZmljYXRpb24taG9tZS9jZXJ0aWZpY2F0aW9uLWhvbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core'\n\nimport { NsPage, ConfigurationsService } from '@ws-widget/utils'\n\n@Component({\n  selector: 'ws-app-certification-home',\n  templateUrl: './certification-home.component.html',\n  styleUrls: ['./certification-home.component.scss'],\n})\nexport class CertificationHomeComponent implements OnInit {\n  pageNavbar: Partial<NsPage.INavBackground>\n\n  constructor(private configSvc: ConfigurationsService) {\n    this.pageNavbar = this.configSvc.pageNavBar\n  }\n\n  ngOnInit() {}\n}\n","export default \".container-balanced {\\n  max-width: 1160px;\\n  margin-left: auto !important;\\n  margin-right: auto !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NvbmFzaGFqdS9WaWRlb3Mvc3BoZXJlLW1vYmlsZS9zdHlsZXMvX3dzLWNvbW1vbi5zY3NzIiwicHJvamVjdC93cy9hcHAvc3JjL2xpYi9yb3V0ZXMvaW5meS9yb3V0ZXMvY2VydGlmaWNhdGlvbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jZXJ0aWZpY2F0aW9uLXJlcXVlc3RzL2NlcnRpZmljYXRpb24tcmVxdWVzdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7RUFDRSxpQkFBQTtFQUVBLDRCQUFBO0VBQ0EsNkJBQUE7QUNURiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL2NlcnRpZmljYXRpb24tcmVxdWVzdHMvY2VydGlmaWNhdGlvbi1yZXF1ZXN0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy9fd3MtdmFycy5zY3NzJztcbkBpbXBvcnQgJ3N0eWxlcy9fd3MtbWl4aW5zLnNjc3MnO1xuXG4lYmFja2dyb3VuZC1pbWFnZS1jZW50ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbiVwYWdlLWNlbnRlciB7XG4gIG1heC13aWR0aDogMTE2MHB4O1xuICAvLzgwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuJWhlaWdodC1tYXQtdG9vbGJhci1zaWJsaW5nIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAjeyRtYXQtdG9vbGJhci14c30pO1xuXG4gIC8vIHBhZGRpbmc6ICRzaXplLW07XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQtZ3QteHMge1xuICAgIGhlaWdodDogY2FsYygxMDAlIC0gI3skbWF0LXRvb2xiYXItZ3QteHN9KTtcbiAgfVxufVxuIiwiLmNvbnRhaW5lci1iYWxhbmNlZCB7XG4gIG1heC13aWR0aDogMTE2MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core'\nimport { BehaviorSubject, noop, Subscription } from 'rxjs'\nimport { takeWhile, tap, switchMap } from 'rxjs/operators'\n\nimport { TFetchStatus } from '@ws-widget/utils'\n\nimport {\n  ICertificationRequestItem,\n  TCertificationRequestType,\n  IRequestFilterDialogResult,\n} from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\nimport { RequestFilterDialogComponent } from '../request-filter-dialog/request-filter-dialog.component'\nimport { CertificationDashboardService } from '../../services/certification-dashboard.service'\nimport { MatDialog } from '@angular/material'\n\n@Component({\n  selector: 'ws-app-certification-requests',\n  templateUrl: './certification-requests.component.html',\n  styleUrls: ['./certification-requests.component.scss'],\n})\nexport class CertificationRequestsComponent implements OnInit, OnDestroy {\n  @Input() readonly pageType!: 'approver' | 'user'\n  approvalItems: ICertificationRequestItem[]\n  itemFetchStatus: TFetchStatus\n  requestType: TCertificationRequestType\n  startDate: Date\n  endDate: Date\n  itemSubject: BehaviorSubject<boolean>\n\n  private itemSub?: Subscription\n  private dialogSub?: Subscription\n\n  constructor(\n    private dialog: MatDialog,\n    private certificationDashboardSvc: CertificationDashboardService,\n  ) {\n    this.approvalItems = []\n    this.requestType = 'all'\n    this.itemFetchStatus = 'none'\n    this.itemSubject = new BehaviorSubject<boolean>(true)\n    this.startDate = new Date(new Date().getFullYear(), 0, 1)\n    this.endDate = new Date(new Date().getFullYear() + 1, 0, 1)\n  }\n\n  ngOnInit() {\n    this.subscribeToSubject()\n  }\n\n  ngOnDestroy() {\n    if (this.itemSub && !this.itemSub.closed) {\n      this.itemSub.unsubscribe()\n    }\n\n    if (this.dialogSub && !this.dialogSub.closed) {\n      this.dialogSub.unsubscribe()\n    }\n  }\n\n  openFilterDialog() {\n    this.dialogSub = this.dialog\n      .open<RequestFilterDialogComponent, 'approver' | 'user', IRequestFilterDialogResult>(\n        RequestFilterDialogComponent,\n        { data: this.pageType },\n      )\n      .afterClosed()\n      .pipe(\n        takeWhile(dialogResult => {\n          if (dialogResult) {\n            return true\n          }\n\n          return false\n        }),\n        tap(dialogResult => {\n          if (dialogResult) {\n            if (dialogResult.type) {\n              this.requestType = dialogResult.type\n            }\n\n            if (dialogResult.startDate) {\n              this.startDate = dialogResult.startDate\n            }\n\n            if (dialogResult.endDate) {\n              this.endDate = dialogResult.endDate\n            }\n          }\n        }),\n      )\n      .subscribe(() => {\n        this.itemSubject.next(true)\n      },         noop)\n  }\n\n  private subscribeToSubject() {\n    this.itemSub = this.itemSubject\n      .pipe(\n        takeWhile(value => value),\n        tap(() => {\n          this.itemFetchStatus = 'fetching'\n        }),\n        switchMap(() =>\n          this.pageType === 'approver'\n            ? this.certificationDashboardSvc.getApprovalItems(this.requestType || 'all')\n            : this.certificationDashboardSvc.getCertificationRequests(\n                this.startDate,\n                this.endDate,\n                this.requestType,\n              ),\n        ),\n      )\n      .subscribe(\n        items => {\n          this.approvalItems = items\n          this.itemFetchStatus = 'done'\n        },\n        () => {\n          this.itemFetchStatus = 'error'\n        },\n      )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core'\nimport { FormControl, Validators } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material'\n\nimport {\n  ICertificationDialogData,\n  ICertificationDialogResult,\n} from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\nimport { CertificationDashboardService } from '../../services/certification-dashboard.service'\n\n@Component({\n  selector: 'ws-app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  reasonCtrl: FormControl\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ICertificationDialogData,\n    public dialogRef: MatDialogRef<ConfirmDialogComponent, ICertificationDialogResult>,\n    private certificationDashboardSvc: CertificationDashboardService,\n  ) {\n    this.reasonCtrl = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(\n        this.data.approvalItem.record_type === 'result_verification' ? 500 : 1000,\n      ),\n    ])\n  }\n\n  ngOnInit() {}\n\n  sendAction() {\n    if (\n      (this.data.approvalItem.record_type === 'budget_approval' &&\n        this.data.actionType === 'decline' &&\n        this.reasonCtrl.invalid) ||\n      (this.data.approvalItem.record_type === 'result_verification' && this.reasonCtrl.invalid)\n    ) {\n      return\n    }\n    this.dialogRef.close({\n      action: this.data.approvalItem.record_type,\n      result: true,\n      data: this.certificationDashboardSvc.getDialogActionData(this.data, this.reasonCtrl.value),\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL215LXJlcXVlc3RzL215LXJlcXVlc3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'ws-app-my-requests',\n  templateUrl: './my-requests.component.html',\n  styleUrls: ['./my-requests.component.scss'],\n})\nexport class MyRequestsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".container-balanced {\\n  max-width: 1160px;\\n  margin-left: auto !important;\\n  margin-right: auto !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NvbmFzaGFqdS9WaWRlb3Mvc3BoZXJlLW1vYmlsZS9zdHlsZXMvX3dzLWNvbW1vbi5zY3NzIiwicHJvamVjdC93cy9hcHAvc3JjL2xpYi9yb3V0ZXMvaW5meS9yb3V0ZXMvY2VydGlmaWNhdGlvbi1kYXNoYm9hcmQvY29tcG9uZW50cy9wYXN0LWNlcnRpZmljYXRpb25zL3Bhc3QtY2VydGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7RUFDRSxpQkFBQTtFQUVBLDRCQUFBO0VBQ0EsNkJBQUE7QUNURiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL3Bhc3QtY2VydGlmaWNhdGlvbnMvcGFzdC1jZXJ0aWZpY2F0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy9fd3MtdmFycy5zY3NzJztcbkBpbXBvcnQgJ3N0eWxlcy9fd3MtbWl4aW5zLnNjc3MnO1xuXG4lYmFja2dyb3VuZC1pbWFnZS1jZW50ZXIge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbiVwYWdlLWNlbnRlciB7XG4gIG1heC13aWR0aDogMTE2MHB4O1xuICAvLzgwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuJWhlaWdodC1tYXQtdG9vbGJhci1zaWJsaW5nIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAjeyRtYXQtdG9vbGJhci14c30pO1xuXG4gIC8vIHBhZGRpbmc6ICRzaXplLW07XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQtZ3QteHMge1xuICAgIGhlaWdodDogY2FsYygxMDAlIC0gI3skbWF0LXRvb2xiYXItZ3QteHN9KTtcbiAgfVxufVxuIiwiLmNvbnRhaW5lci1iYWxhbmNlZCB7XG4gIG1heC13aWR0aDogMTE2MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core'\nimport { FormControl } from '@angular/forms'\nimport { BehaviorSubject, noop } from 'rxjs'\nimport { tap, switchMap } from 'rxjs/operators'\n\nimport { TFetchStatus } from '@ws-widget/utils'\n\nimport {\n  TCertificationCompletionStatus,\n  ICertificationSubmission,\n} from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\nimport { CertificationApiService } from '../../../../../app-toc/routes/app-toc-certification/apis/certification-api.service'\n\n@Component({\n  selector: 'ws-app-past-certifications',\n  templateUrl: './past-certifications.component.html',\n  styleUrls: ['./past-certifications.component.scss'],\n})\nexport class PastCertificationsComponent implements OnInit {\n  pastCertifications: ICertificationSubmission[]\n  certificationsFetchStatus: TFetchStatus\n  statusControl: FormControl\n  fetchSubject: BehaviorSubject<TCertificationCompletionStatus>\n\n  constructor(private certificationApi: CertificationApiService) {\n    this.pastCertifications = []\n    this.certificationsFetchStatus = 'none'\n    this.statusControl = new FormControl('completed')\n    this.fetchSubject = new BehaviorSubject(this.statusControl.value)\n  }\n\n  ngOnInit() {\n    this.fetchSubject\n      .pipe(\n        tap(() => {\n          this.certificationsFetchStatus = 'fetching'\n        }),\n        switchMap(status => this.certificationApi.getPastCertifications(status)),\n      )\n      .subscribe(\n        certifications => {\n          this.pastCertifications = certifications\n          this.certificationsFetchStatus = 'done'\n        },\n        () => {\n          this.certificationsFetchStatus = 'error'\n        },\n      )\n\n    this.statusControl.valueChanges.subscribe((value: TCertificationCompletionStatus) => {\n      this.fetchSubject.next(value)\n    },                                        noop)\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL3JlcXVlc3QtZmlsdGVyLWRpYWxvZy9yZXF1ZXN0LWZpbHRlci1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core'\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material'\n\nimport { IRequestFilterDialogResult } from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\n\n@Component({\n  selector: 'ws-app-request-filter-dialog',\n  templateUrl: './request-filter-dialog.component.html',\n  styleUrls: ['./request-filter-dialog.component.scss'],\n})\nexport class RequestFilterDialogComponent implements OnInit {\n  filterForm: FormGroup\n  readonly defaultStartDate: Date\n  readonly defaultEndDate: Date\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public pageType: 'approver' | 'user',\n    private dialogRef: MatDialogRef<RequestFilterDialogComponent, IRequestFilterDialogResult>,\n  ) {\n    this.defaultStartDate = new Date(new Date().getFullYear(), 0, 1)\n    this.defaultEndDate = new Date()\n\n    this.filterForm = new FormGroup({\n      type: new FormControl('all'),\n      startDate: new FormControl(this.defaultStartDate),\n      endDate: new FormControl(this.defaultEndDate),\n    })\n\n    this.setConditionalValidators()\n  }\n\n  ngOnInit() {}\n\n  applyFilters() {\n    if (this.filterForm.invalid) {\n      return\n    }\n\n    const dialogResult: IRequestFilterDialogResult = {\n      type: this.filterForm.value.type,\n      startDate: this.filterForm.value.startDate,\n      endDate: this.filterForm.value.endDate,\n    }\n\n    this.dialogRef.close(dialogResult)\n  }\n\n  private setConditionalValidators() {\n    if (this.pageType === 'user') {\n      const startDateCtrl = this.filterForm.get('startDate')\n      const endDateCtrl = this.filterForm.get('endDate')\n\n      if (startDateCtrl && endDateCtrl) {\n        startDateCtrl.setValidators([Validators.required, this.datePickerValidator.bind(this)])\n        endDateCtrl.setValidators([Validators.required, this.datePickerValidator.bind(this)])\n      }\n    }\n  }\n\n  private datePickerValidator(): ValidationErrors | null {\n    try {\n      const startDate: Date = new Date(this.filterForm.controls.startDate.value)\n      const endDate: Date = new Date(this.filterForm.controls.endDate.value)\n\n      if (!(startDate && endDate)) {\n        return null\n      }\n\n      if (startDate.getTime() > endDate.getTime()) {\n        return {\n          invalidDate: true,\n        }\n      }\n\n      return null\n    } catch (error) {\n      return {\n        invalidDate: true,\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL3JlcXVlc3QtaXRlbS10eXBlL3JlcXVlc3QtaXRlbS10eXBlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core'\n\nimport { TCertificationRequestType } from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\n\n@Component({\n  selector: 'ws-app-request-item-type',\n  templateUrl: './request-item-type.component.html',\n  styleUrls: ['./request-item-type.component.scss'],\n})\nexport class RequestItemTypeComponent implements OnInit {\n  @Input() itemType!: TCertificationRequestType\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL3VzZXItYWN0aW9uLWNvbmZpcm0tZGlhbG9nL3VzZXItYWN0aW9uLWNvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material'\n\nimport { IUserActionDialogData } from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\n\n@Component({\n  selector: 'ws-app-user-action-confirm-dialog',\n  templateUrl: './user-action-confirm-dialog.component.html',\n  styleUrls: ['./user-action-confirm-dialog.component.scss'],\n})\nexport class UserActionConfirmDialogComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: IUserActionDialogData,\n    public dialogRef: MatDialogRef<UserActionConfirmDialogComponent>,\n  ) {}\n\n  ngOnInit() {}\n\n  onAction() {\n    this.dialogRef.close({\n      confirmAction: true,\n      requestType: this.data.approvalItem.record_type,\n      action: this.data.actionType,\n      certificationId: this.data.approvalItem.certification,\n      slotNo: this.data.approvalItem.slotno,\n      icfdId: this.data.approvalItem.icfdid,\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0L3dzL2FwcC9zcmMvbGliL3JvdXRlcy9pbmZ5L3JvdXRlcy9jZXJ0aWZpY2F0aW9uLWRhc2hib2FyZC9jb21wb25lbnRzL3VzZXItcmVxdWVzdC1jYXJkL3VzZXItcmVxdWVzdC1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core'\nimport { MatDialog, MatSnackBar } from '@angular/material'\nimport { BehaviorSubject } from 'rxjs'\nimport { takeWhile, tap, switchMap } from 'rxjs/operators'\n\nimport { TSendStatus, TFetchStatus } from '@ws-widget/utils'\n\nimport {\n  ICertificationRequestItem,\n  TCertificationUserActionType,\n  IUserActionDialogData,\n} from '../../../../../app-toc/routes/app-toc-certification/models/certification.model'\nimport { CertificationDashboardService } from '../../services/certification-dashboard.service'\nimport { CertificationApiService } from '../../../../../app-toc/routes/app-toc-certification/apis/certification-api.service'\nimport { FileDownloadService } from '../../../../../app-toc/routes/app-toc-certification/services/file-download.service'\nimport { UserActionConfirmDialogComponent } from '../user-action-confirm-dialog/user-action-confirm-dialog.component'\nimport { SnackbarComponent } from '../../../../../app-toc/routes/app-toc-certification/components/snackbar/snackbar.component'\n\n@Component({\n  selector: 'ws-app-user-request-card',\n  templateUrl: './user-request-card.component.html',\n  styleUrls: ['./user-request-card.component.scss'],\n})\nexport class UserRequestCardComponent implements OnInit {\n  @Input() requestItem!: ICertificationRequestItem\n  @Input() itemSubject!: BehaviorSubject<boolean>\n  sendStatus: TSendStatus\n  downloadStatus: TFetchStatus\n\n  constructor(\n    private dialog: MatDialog,\n    private snackbar: MatSnackBar,\n    private certificationDashboardSvc: CertificationDashboardService,\n    private certificationApi: CertificationApiService,\n    private fileDownloadSvc: FileDownloadService,\n  ) {\n    this.sendStatus = 'none'\n    this.downloadStatus = 'none'\n  }\n\n  ngOnInit() {}\n\n  confirmAction(actionType: TCertificationUserActionType) {\n    if (\n      this.requestItem.record_type === 'budget_approval' ||\n      this.requestItem.record_type === 'proctor_approval'\n    ) {\n      this.dialog\n        .open<UserActionConfirmDialogComponent, IUserActionDialogData>(\n          UserActionConfirmDialogComponent,\n          { data: { actionType, approvalItem: this.requestItem } },\n        )\n        .afterClosed()\n        .pipe(\n          takeWhile(dialogResult => dialogResult && dialogResult.confirmAction),\n          tap(() => {\n            this.sendStatus = 'sending'\n          }),\n          switchMap(dialogResult =>\n            this.certificationDashboardSvc.performUserRequestAction(\n              this.requestItem.record_type,\n              dialogResult,\n            ),\n          ),\n        )\n        .subscribe(\n          () => {\n            this.itemSubject.next(true)\n            this.sendStatus = 'done'\n          },\n          () => {\n            this.sendStatus = 'error'\n          },\n        )\n    }\n  }\n\n  downloadProof() {\n    if (this.requestItem.document && this.requestItem.document.length) {\n      this.downloadStatus = 'fetching'\n      this.certificationApi\n        .getUploadedDocument(\n          this.requestItem.document_url || this.requestItem.document[0].document_url,\n        )\n        .pipe(\n          switchMap((documentData: any) =>\n            this.fileDownloadSvc.saveFile(documentData.documentString, documentData.documentName),\n          ),\n        )\n        .subscribe(\n          () => {\n            this.downloadStatus = 'done'\n          },\n          () => {\n            this.downloadStatus = 'error'\n          },\n        )\n    } else {\n      this.snackbar.openFromComponent(SnackbarComponent)\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { Observable, of } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\n\nimport { CertificationApiService } from '../../../../app-toc/routes/app-toc-certification/apis/certification-api.service'\nimport {\n  TCertificationRequestType,\n  ICertificationRequestItem,\n  ICertificationApproverData,\n  ICertificationDialogData,\n  ICertificationSendResponse,\n} from '../../../../app-toc/routes/app-toc-certification/models/certification.model'\n\n@Injectable()\nexport class CertificationDashboardService {\n  constructor(private certificationApi: CertificationApiService) {}\n\n  getApprovalItems(\n    requestType?: TCertificationRequestType,\n  ): Observable<ICertificationRequestItem[]> {\n    return of(requestType).pipe(\n      map(type => {\n        if (type !== 'all') {\n          return type\n        }\n\n        return undefined\n      }),\n      switchMap(type => this.certificationApi.getApprovalItems(type)),\n    )\n  }\n\n  getCertificationRequests(\n    startDate: Date,\n    endDate: Date,\n    type: TCertificationRequestType | null,\n  ): Observable<ICertificationRequestItem[]> {\n    const requestType = type === 'all' ? null : type\n    const startDateMs = startDate.getTime()\n    const endDateMs = endDate.getTime()\n\n    return this.certificationApi.getCertificationRequests(startDateMs, endDateMs, requestType).pipe(\n      map(requestItems => {\n        requestItems.forEach(requestItem => {\n          if (typeof requestItem.document === 'string') {\n            requestItem.document_url = requestItem.document\n          }\n        })\n\n        return requestItems\n      }),\n    )\n  }\n\n  performApproverAction(\n    requestType: TCertificationRequestType,\n    data: ICertificationApproverData,\n  ): Observable<ICertificationSendResponse | null> {\n    switch (requestType) {\n      case 'proctor_approval':\n        return this.certificationApi.sendAtDeskProctorAction(data.icfdId || 0, {\n          status: data.status,\n        })\n\n      case 'budget_approval':\n        return this.certificationApi.sendBudgetApproverAction(\n          data.certificationId || '',\n          data.sino || 0,\n          data.ecdpId || 0,\n          {\n            status: data.status,\n            reason: data.reason || '',\n          },\n        )\n\n      case 'result_verification':\n        return this.certificationApi.sendResultVerificationAction(data.certificationId || '', {\n          status: data.status,\n          reason: data.reason || '',\n          upload_id: data.uploadId,\n          user: data.user ? data.user.email : '',\n        })\n\n      default:\n        return of({ res_code: 0, res_message: 'error' })\n    }\n  }\n\n  performUserRequestAction(requestType: TCertificationRequestType, data: any) {\n    switch (requestType) {\n      case 'proctor_approval':\n        return this.certificationApi.cancelSlot(data.certificationId, data.slotNo, data.icfdId)\n\n      case 'budget_approval':\n        return this.certificationApi.cancelBudgetApprovalRequest(data.certificationId)\n\n      default:\n        return of({ res_code: 0, res_message: 'error' })\n    }\n  }\n\n  getDialogActionData(data: ICertificationDialogData, reason: string) {\n    try {\n      const resultData: ICertificationApproverData = {}\n\n      switch (data.actionType) {\n        case 'accept':\n          resultData.status = 'Approved'\n          break\n        case 'decline':\n          resultData.status = 'Rejected'\n          break\n      }\n\n      switch (data.approvalItem.record_type) {\n        case 'proctor_approval':\n          resultData.icfdId = data.approvalItem.icfdid\n          break\n\n        case 'result_verification':\n          resultData.certificationId = data.approvalItem.certification\n          resultData.uploadId = data.approvalItem.upload_id\n          resultData.reason = reason\n          resultData.user = data.approvalItem.user\n          break\n\n        case 'budget_approval':\n          resultData.certificationId = data.approvalItem.certification\n          resultData.ecdpId = data.approvalItem.ecdp_id\n          resultData.sino = data.approvalItem.sino\n          resultData.reason = reason\n          break\n      }\n\n      return resultData\n    } catch (e) {\n      return null\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}